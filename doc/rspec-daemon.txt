*rspec-daemon.txt*	A Vim plugin for rspec-daemon

==============================================================================
CONTENTS						*rspec-daemon-contents*

INTRODUCTION					|rspec-daemon-introduction|
REQUIREMENTS					|rspec-daemon-requirements|
INSTALLATION					|rspec-daemon-installation|
USAGE						|rspec-daemon-usage|
COMMAND						|rspec-daemon-command|
OPTIONS						|rspec-daemon-options|
TODO						|rspec-daemon-todo|
ACKNOWLEDGEMENTS				|rspec-daemon-acknowledgements|

==============================================================================
INTRODUCTION					*rspec-daemon-introduction*

This plugin provides some useful interfaces for rspec-daemon.

https://github.com/asonas/rspec-daemon

rspec-daemon is a great gem, but this gem only has an interface using TCP
port. So we need to communicate with the ports to run specs each time. For
example we run the following shell command as below.
>
	echo spec/a_spec.rb | nc 0.0.0.0 3002
<
This is very simple, but too bothersome to run it each time manually. Instead,
this plugin provides Vim commands to send the request to rspec-daemon or to
watch source code and run appropriate specs automatically. Let's enjoy
comfortable development with Vim and rspec-daemon.

==============================================================================
REQUIREMENTS					*rspec-daemon-requirements*

- rspec-daemon gem
    - This plugin doesn't know how to start a rspec-daemon process.
    - This plugin assumes that a process of rspec-daemon is already running.
- nc(1) or socat(1) to communicate with TCP ports.

==============================================================================
INSTALLATION					*rspec-daemon-installation*

Use your favorite plugin manager, or use |:packadd| if you are a Vim8 user.

==============================================================================
USAGE							*rspec-daemon-usage*

Open a spec file and execute the following command to run the spec on the
rspec-daemon.
>
	:RunRSpec
<
Or run the following command to watch any changes against the current source
file or spec file and run the appropriate spec on the rspec-daemon
automatically.
>
	:WatchAndRunRSpec
<
And run the following command to stop the watching and running.
>
	:UnwatchAndRunRSpec
<

==============================================================================
COMMAND							*rspec-daemon-command*

								*:RunRSpec*
:RunRSpec[!] [FILES]
	Send the request to the rspec-daemon to run specs specified by [FILES].

	For example if [FILES] is as below,
>
	:RunRSpec spec/a_spec.rb spec/b_spec.rb
<
	Then this command send the request as below.
>
	spec/a_spec.rb
	spec/b_spec.rb
<
	If [FILES] are omitted, the command assumes the current file is
	specified as below.
>
	:RunRSpec %
<
	If [!] is specified, append the current cursor line number to the
	request as below only if [FILES] is omitted.
>
	spec/a_spec.rb:10
<
	So you can run only specs on the current cursor or around it.

							*:WatchAndRunRSpec*
:WatchAndRunRSpec[!]
	Watch any changes against the current file and send the request to the
	rspec-daemon to run the appropriate spec automatically if the file is
	changed.

	If [!] is specified, Vim sends the request with the current cursor
	line number in a similar way to `:RunRSpec!`.

	See |:UnwatchAndRunRSpec| if you want to stop the watch.

							*UnwatchAndRunRSpec*
:UnwatchAndRunRSpec
	Stop watching the current file and running specs by
	|:WatchAndRunRSpec|.

==============================================================================
OPTIONS							*rspec-daemon-options*

							*g:rspec_daemon_host*
							*b:rspec_daemon_host*
g:rspec_daemon_host
	A |String| that is the host name of rspec-daemon.

	Default: 0.0.0.0

							*g:rspec_daemon_port*
							*b:rspec_daemon_port*
g:rspec_daemon_port
	A |Number| that is the port number of rspec-daemon.

	Default: 3002

==============================================================================
TODO							*rspec-daemon-todo*

- Communicate with TCP ports using |channel|.

==============================================================================
ACKNOWLEDGEMENTS				*rspec-daemon-acknowledgements*

This plugin is for the great gem, rspec-daemon.

https://github.com/asonas/rspec-daemon

And this plugin is inspired by vscode-rspec-daemon.

https://github.com/tk0miya/vscode-rspec-daemon

Thank you very much, Yuya Fujiwara (@asonas, the author of rspec-daemon) and
Takeshi KOMIYA (@tk0miya, the author of vscode-rspec-daemon)

==============================================================================
vim:tw=78:ts=8:noet:ft=help:norl:
